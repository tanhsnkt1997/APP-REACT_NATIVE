import React from 'react';
import {
    View, Text, TouchableOpacity, ScrollView,
    Dimensions, StyleSheet, Image, BadgeTabIcon, ListView,
    WebView
} from 'react-native';
import { Ionicons } from '@expo/vector-icons';

import HeaderComponent from './Manhinhchinh/HeaderComponent'
import Search from './Search/Search';
import IconBadge from 'react-native-icon-badge';
import carticon from '../Access/src/media/appIcon/cart.png'
import global from './Api/Global'
import sentOder from '../components/Api/sentOrder'
import gettoken from '../components/Api/gettoken'

const url = 'http://10.60.253.0/api/images/product/'

function toTitleCase(str) {
    return str.replace(/\w\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());
}


const { widtht, height } = Dimensions.get('window')

export default class Cart extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            arraycart: [],
            gotopayment: false
        }
        // console.log(this.props)
        console.log(this.state.count)
    }




    static navigationOptions = ({ screenProps }) => ({
        tabBarLabel: 'Gi? hàng',
        tabBarIcon: ({ tintColor }) =>
            (
                <Image source={carticon}
                    style={{ tintColor: tintColor, width: 40, height: 30 }} />
            ),
        tabBarOptions: { activeTintColor: 'red' }


    })


    /*
    <IconBadge
                    MainElement={
                        <Image source={carticon}
                            style={{ tintColor: tintColor, width: 40, height: 30 }} />
                    }
                    BadgeElement={
                        <Text style={{ color: '#FFFFFF' }}>1</Text>
                    }
                    IconBadgeStyle={
                        {
                            width: 20,
                            height: 20,
                            backgroundColor: 'blue'
                        }
                    }
    
                />
    */


    upquantity(id) {
        global.upquantity(id)
    }
    downquantitys(id) {
        global.downquantity(id)
    }
    removeproduct(id) {
        global.removeproduct(id)
    }



    gotopayment() {
        <WebView
            source={{ uri: 'https://www.baokim.vn/payment/product/version11?business=tanhsnkt1997%40gmail.com&id=&order_description=&product_name=tensanpham&product_price=100000&product_quantity=2&total_amount=200000&url_cancel=&url_detail=&url_success=' }}
            style={{ height: height - 20, width: widtht }}
        />
    }

    async onsentOrder() {
        try {
            const cartArray = this.props.screenProps;
            const token = await gettoken()
            const arrdetail = this.props.screenProps.map(e => ({
                id: e.product.id,
                quantity: e.quantity,
            })
            )
            // console.log(arrdetail)
            const kq = await sentOder(token, arrdetail)
            // console.log('kq la dmm', kq)
            if (kq === 'THEM_THANH_CONG') {
                this.setState({ gotopayment: true })
                console.log(this.state.gotopayment)
            }
            else {
                console.log('0')
            }
        }
        catch (e) {
            console.log(e)
        }
    }

    render() {
        const { main, checkoutButton, checkoutTitle, wrapper,
            product, mainRight, productController,
            txtName, txtPrice, productImage, numberOfProduct,
            txtShowDetail, showDetailContainer } = styles;
        const cartArray = this.props.screenProps;




        //  console.log(this.props.screenProps.product)
        ///tong tien
        const arrtotal = cartArray.map(e => e.product.price * e.quantity)
        //console.log(arrtotal)
        const total = arrtotal.length ? arrtotal.reduce((a, b) => a + b) : 0
        //const total= arrtotal ? 0 : arrtotal.reduce((a,b)=>a+b)
        //console.log(err)
        ////////////////arrtotal.length ? arrtotal.reduce((a,b)=>a+b) : 0


        const goToPayMent = (
            <WebView
                source={{ uri: 'https://www.baokim.vn/payment/product/version11?business=tanhsnkt1997%40gmail.com&id=&order_description=&product_name=tensanpham&product_price=100000&product_quantity=2&total_amount=200000&url_cancel=&url_detail=&url_success=' }}
                style={{ flex: 1, height: height - 20, width: widtht }}

            />
        )


        const noPayMent = (
            <View style={wrapper}>
                <HeaderComponent {...this.props} />
                <Search {...this.props} />
                <ListView
                    //contentContainerStyle={styles.main}
                    enableEmptySections
                    dataSource={new ListView.DataSource({ rowHasChanged: (r1, r2) => r1 !== r2 }).cloneWithRows(cartArray)}
                    renderRow={(e) => (<View style={product} key={e}>
                        <Image source={{ uri: `${url}${e.product.images[0]}` }} style={productImage} />
                        <View style={[mainRight]}>
                            <View style={{ justifyContent: 'space-between', flexDirection: 'row' }}>
                                <Text style={txtName}>{toTitleCase(e.product.name)}</Text>
                                <TouchableOpacity onPress={() => this.removeproduct(e.product.id)}>
                                    <Text style={{ color: '#969696' }}>X</Text>
                                </TouchableOpacity>
                            </View>
                            <View>
                                <Text style={txtPrice}>{e.product.price}$</Text>
                            </View>
                            <View style={productController}>
                                <View style={numberOfProduct}>
                                    <TouchableOpacity onPress={() => this.upquantity(e.product.id)}>
                                        <Text>+</Text>
                                    </TouchableOpacity>
                                    <Text>{e.quantity}</Text>
                                    <TouchableOpacity onPress={() => this.downquantitys(e.product.id)}>
                                        <Text>-</Text>
                                    </TouchableOpacity>
                                </View>
                                <TouchableOpacity style={showDetailContainer} onPress={() => this.props.navigation.navigate('Detail', { product: e.product })}>
                                    <Text style={txtShowDetail}>SHOW DETAILS</Text>
                                </TouchableOpacity>
                            </View>
                        </View>
                    </View>)}
                />


                <TouchableOpacity style={checkoutButton} onPress={this.onsentOrder.bind(this)} >
                    <Text style={checkoutTitle}>T?ng c?ng {total}$ Thanh toán ngay</Text>
                </TouchableOpacity>

            </View>
        )



        const tongket = this.state.gotopayment === false ? noPayMent : goToPayMent
        return (
            <View style={{flex:1}}>
                {tongket}
            </View>


        );
    }
}

const { width } = Dimensions.get('window');
const imageWidth = width / 4;
const imageHeight = (imageWidth * 452) / 361;

const styles = StyleSheet.create({
    wrapper: {
        flex: 1,
        backgroundColor: '#DFDFDF'
    },
    checkoutButton: {
        height: 50,
        margin: 10,
        marginTop: 0,
        backgroundColor: '#2ABB9C',
        borderRadius: 2,
        alignItems: 'center',
        justifyContent: 'center'
    },
    main: {
        width, backgroundColor: '#DFDFDF'
    },
    checkoutTitle: {
        color: '#FFF',
        fontSize: 15,
        fontWeight: 'bold',

    },
    product: {
        flexDirection: 'row',
        margin: 10,
        padding: 10,
        backgroundColor: '#FFFFFF',
        borderRadius: 2,
        shadowColor: '#3B5458',
        shadowOffset: { width: 0, height: 3 },
        shadowOpacity: 0.2
    },
    productImage: {
        width: imageWidth,
        height: imageHeight,
        flex: 1,
        resizeMode: 'center'
    },
    mainRight: {
        flex: 3,
        justifyContent: 'space-between'
    },
    productController: {
        flexDirection: 'row'
    },
    numberOfProduct: {
        flex: 1,
        flexDirection: 'row',
        justifyContent: 'space-around'
    },
    txtName: {
        paddingLeft: 20,
        color: '#A7A7A7',
        fontSize: 20,
        fontWeight: '400',

    },
    txtPrice: {
        paddingLeft: 20,
        color: '#C21C70',
        fontSize: 20,
        fontWeight: '400',

    },
    txtShowDetail: {
        color: '#C21C70',
        fontSize: 10,
        fontWeight: '400',
        textAlign: 'right',
    },
    showDetailContainer: {
        flex: 1,
        flexDirection: 'row',
        justifyContent: 'flex-end'
    }
});

/* <ScrollView style={main}>
                    {cartArray.map(e => (

                        <View style={product} key={e}>
                            <Image source={sp1} style={productImage} />
                            <View style={[mainRight]}>
                                <View style={{ justifyContent: 'space-between', flexDirection: 'row' }}>
                                    <Text style={txtName}>{toTitleCase('T? Xuân Anh')}</Text>
                                    <TouchableOpacity>
                                        <Text style={{ color: '#969696' }}>X</Text>
                                    </TouchableOpacity>
                                </View>
                                <View>
                                    <Text style={txtPrice}>{100}$</Text>
                                </View>
                                <View style={productController}>
                                    <View style={numberOfProduct}>
                                        <TouchableOpacity>
                                            <Text>+</Text>
                                        </TouchableOpacity>
                                        <Text>{3}</Text>
                                        <TouchableOpacity>
                                            <Text>-</Text>
                                        </TouchableOpacity>
                                    </View>
                                    <TouchableOpacity style={showDetailContainer} onPress={() => console.log(cartArray)}>
                                        <Text style={txtShowDetail}>SHOW DETAILS</Text>
                                    </TouchableOpacity>
                                </View>
                            </View>
                        </View>


                    ))}

                </ScrollView> */

